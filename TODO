Things to do (a.k.a. "road map"):
---------------------------------

a) some simple GUI for full-text searching using SOLR

   1) for organizations:
      searching using name and surname, organization name or ICO
      facets: sro, no, ...

      i) fix exception occurring during fetching of results from SOLR:

Caused by: java.lang.RuntimeException: Exception while setting value : ORGANIZATION_RECORD on private sk.opendata.odn.repository.solr.SolrItemType sk.opendata.odn.repository.solr.SolrItem.type
	at org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField.set(DocumentObjectBinder.java:380)
	at org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField.inject(DocumentObjectBinder.java:362)
	at org.apache.solr.client.solrj.beans.DocumentObjectBinder.getBean(DocumentObjectBinder.java:67)
	at org.apache.solr.client.solrj.beans.DocumentObjectBinder.getBeans(DocumentObjectBinder.java:47)
	at org.apache.solr.client.solrj.response.QueryResponse.getBeans(QueryResponse.java:452)
	at sk.opendata.odn.ui.panel.ResultPanel.doSearch(ResultPanel.java:147)


   2) ...

b) GUI for "advanced search" using SOLR syntax with some "prepared examples"
   (in a form of link: after link is clicked, search term is filled in and
   search results are updated - each field and data type should be covered, like
   "zakladne imanie: from 10 to 100 â‚¬" etc.)

c) enhancing the Datanest CSV harvesters to be able to "re-run"
   and process only differences - i.e. we need to make them able to
   keep ODN copy of data up-to-date with Datanest "original"

d) adding more harvesters: direct harvesting of ORSR to get more data
   about companies, direct harvesting of procurement portals to have
   a shot by getting more data from the scanned documents themselves, ...

e) transform the existing application into something like container
   or whatever (maybe even using OSGI) so that it loads and runs
   Harvester and other components (as sort of plug-ins)

   i) at first, we need to only split the code into appropriate
      classes and packages, all in one project

   ii) later we can think about making it configurable so that ODN
       can be deployed in varying configurations (like somebody does
       not need certain harvesters and APIs so there would be a way to
       configure and deploy ODN to meet that criteria)

f) ...
